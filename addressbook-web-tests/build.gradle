apply plugin: 'java'

repositories {
    mavenCentral()
}

configurations {
    agent
}

dependencies {
    implementation 'org.testng:testng:7.0.0'
    implementation 'org.seleniumhq.selenium:selenium-java:3.14.0'
    implementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    implementation 'com.beust:jcommander:1.48'
    implementation 'com.thoughtworks.xstream:xstream:1.4.8'
    implementation 'com.google.code.gson:gson:2.6.1'
    implementation 'ch.qos.logback:logback-classic:1.1.5'
    implementation 'mysql:mysql-connector-java:5.1.38'
    implementation 'org.hibernate:hibernate-core:5.0.1.Final'
    agent 'org.aspectj:aspectjweaver:1.8.0'
    compile 'ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4'
    implementation 'org.robotframework:robotframework:3.0'
    implementation 'info.cukes:cucumber-java:1.2.4'
    implementation 'info.cukes:cucumber-testng:1.2.4'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task testGroups(type: Test){
    useTestNG {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }

    if (project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }

    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

task testContacts(type: Test){
    useTestNG {
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }

    if (project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }

    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

task testGroupsAndContacts(type: Test){
    useTestNG {
        suites 'src/test/resources/testng-contacts.xml'
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }

    if (project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }

    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

testGroupsAndContacts.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

task rf(type: JavaExec) {
    main = 'org.robotframework.RobotFramework'
    classpath = sourceSets.test.runtimeClasspath
    args '--outputdir', 'build/rf-report'
    args 'src/test/resources/rf'
}